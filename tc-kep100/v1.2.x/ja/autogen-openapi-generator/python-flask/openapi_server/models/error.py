# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.error_error import ErrorError
from openapi_server import util

from openapi_server.models.error_error import ErrorError  # noqa: E501

class Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error=None):  # noqa: E501
        """Error - a model defined in OpenAPI

        :param error: The error of this Error.  # noqa: E501
        :type error: ErrorError
        """
        self.openapi_types = {
            'error': ErrorError
        }

        self.attribute_map = {
            'error': 'error'
        }

        self._error = error

    @classmethod
    def from_dict(cls, dikt) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The error of this Error.  # noqa: E501
        :rtype: Error
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this Error.


        :return: The error of this Error.
        :rtype: ErrorError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this Error.


        :param error: The error of this Error.
        :type error: ErrorError
        """
        if error is None:
            raise ValueError("Invalid value for `error`, must not be `None`")  # noqa: E501

        self._error = error
