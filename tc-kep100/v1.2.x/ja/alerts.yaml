post:
  tags:
    - alert
  summary: アラート設定を1つ登録
  description: |
    指定した条件を満たしたときにWebhookによる通知やFTPサーバにCSV形式で保存するアラート機能の設定を1つ登録する。  
    製品の電源を切ってもアラート設定は保持される。アラート設定の削除か製品の初期化を行うことで設定が消去される。  
    アラート設定は最大5個まで設定可能  
    /alerts.html にブラウザからアクセスし操作することも可能  
    ※通知データの仕様は以下の"Callbacks"タブに記載
  operationId: addAlertSetting
  requestBody:
    # description: アラート設定用パラメータを指定
    # required: true
    content:
      application/json:
        schema:
          # $ref: "./../components/alert.yaml"
          $ref: "./components/alert.yaml"
  callbacks:
    onEvent:
      'http://{$request.body#/dstIp}:{$request.body#/dstPort}{$request.body#/path}': 
        post: 
          summary: Webhook通知/FTP保存
          description: |
            **通知データ**  
            - Webhookモード  
              以下のRequest bodyの仕様に従ってデータをPOSTで通知する。  
            - FTPモード  
              FTPサーバ内の'path'で指定したディレクトリに対し、通知回数'notifyCnt'の0埋め8桁の数値をファイル名とするcsvファイル（例：00000001.csv）を保存する。  
              '00000000.csv'には以下のRequest bodyの入れ子構造を無視した変数名が保存され、'00000001.csv'以降のファイルには各変数の値が保存される。  
              同名のファイル名が既に存在する場合は上書きする。
          requestBody: 
            content:
              application/json:
                schema:
                  # $ref: '#/components/alertCallback.yaml'
                  # $ref: './../components/alertCallback.yaml'
                  $ref: './components/alertCallback.yaml'
                  # $ref: '#/alertCallback'
                  # $ref: '#/components/schemas/alertCallback'


  responses:
    201:
      description: アラート設定の登録成功
      headers:
        Location:
          description: 登録したアラート設定のURL # Location to the added alert setting
          schema:
            type: string
            # format: uri
            # example: '/alerts/0'
      content:
        application/json:
          schema:
            # $ref: "./../components/alert.yaml"
            $ref: "./components/alert.yaml"
    409:
      description: 登録数の上限に達しているため登録に失敗
      content:
        application/json:
          schema:
            # $ref: './../components/error.yaml'
            $ref: './components/error.yaml'

get:
  tags:
    - alert
  summary: 登録済みアラート設定一覧を取得
  description: |
    登録済みのアラートの一覧を取得する。
  operationId: getAlerts
  responses:
    200:
      description: |
        取得成功  
        アラート設定が1つも登録されていなくてもこのレスポンスを返す
      content:
        application/json: 
          schema:
            type: object
            properties:
              alerts:
                type: array
                items:
                  # $ref: "./../components/alert.yaml"
                  $ref: "./components/alert.yaml"

delete: 
  tags: 
    - alert
  summary: '登録済みアラート設定を全て削除'
  description: |
    登録済みアラート設定を全て削除する。  
    /alerts.html にブラウザからアクセスし操作することも可能
  responses:
    204:
      description: |
        アラートの削除に成功  
        登録済みアラート設定が1つも存在しない場合もこのレスポンスを返す
    # 404:
    #   description: |
    #     登録済みアラート設定が1つも存在しない
    #   content:
    #     application/json:
    #       schema:
    #         $ref: './../components/error.yaml'
