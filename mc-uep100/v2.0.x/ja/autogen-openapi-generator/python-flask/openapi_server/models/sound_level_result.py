# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.sound_level_setting import SoundLevelSetting
from openapi_server import util

from openapi_server.models.sound_level_setting import SoundLevelSetting  # noqa: E501

class SoundLevelResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, settings=None, leq=None, sel=None, lpeak=None):  # noqa: E501
        """SoundLevelResult - a model defined in OpenAPI

        :param settings: The settings of this SoundLevelResult.  # noqa: E501
        :type settings: SoundLevelSetting
        :param leq: The leq of this SoundLevelResult.  # noqa: E501
        :type leq: float
        :param sel: The sel of this SoundLevelResult.  # noqa: E501
        :type sel: float
        :param lpeak: The lpeak of this SoundLevelResult.  # noqa: E501
        :type lpeak: float
        """
        self.openapi_types = {
            'settings': SoundLevelSetting,
            'leq': float,
            'sel': float,
            'lpeak': float
        }

        self.attribute_map = {
            'settings': 'settings',
            'leq': 'Leq',
            'sel': 'SEL',
            'lpeak': 'Lpeak'
        }

        self._settings = settings
        self._leq = leq
        self._sel = sel
        self._lpeak = lpeak

    @classmethod
    def from_dict(cls, dikt) -> 'SoundLevelResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The soundLevel_result of this SoundLevelResult.  # noqa: E501
        :rtype: SoundLevelResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def settings(self):
        """Gets the settings of this SoundLevelResult.


        :return: The settings of this SoundLevelResult.
        :rtype: SoundLevelSetting
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this SoundLevelResult.


        :param settings: The settings of this SoundLevelResult.
        :type settings: SoundLevelSetting
        """

        self._settings = settings

    @property
    def leq(self):
        """Gets the leq of this SoundLevelResult.

        等価騒音レベル(単位：dB)   # noqa: E501

        :return: The leq of this SoundLevelResult.
        :rtype: float
        """
        return self._leq

    @leq.setter
    def leq(self, leq):
        """Sets the leq of this SoundLevelResult.

        等価騒音レベル(単位：dB)   # noqa: E501

        :param leq: The leq of this SoundLevelResult.
        :type leq: float
        """

        self._leq = leq

    @property
    def sel(self):
        """Gets the sel of this SoundLevelResult.

        単発騒音暴露レベル(単位：dB)   # noqa: E501

        :return: The sel of this SoundLevelResult.
        :rtype: float
        """
        return self._sel

    @sel.setter
    def sel(self, sel):
        """Sets the sel of this SoundLevelResult.

        単発騒音暴露レベル(単位：dB)   # noqa: E501

        :param sel: The sel of this SoundLevelResult.
        :type sel: float
        """

        self._sel = sel

    @property
    def lpeak(self):
        """Gets the lpeak of this SoundLevelResult.

        ピーク音圧レベル(単位：dB)   # noqa: E501

        :return: The lpeak of this SoundLevelResult.
        :rtype: float
        """
        return self._lpeak

    @lpeak.setter
    def lpeak(self, lpeak):
        """Sets the lpeak of this SoundLevelResult.

        ピーク音圧レベル(単位：dB)   # noqa: E501

        :param lpeak: The lpeak of this SoundLevelResult.
        :type lpeak: float
        """

        self._lpeak = lpeak
